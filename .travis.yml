language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_e0cde499b4bc_key -iv $encrypted_e0cde499b4bc_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: TMJiG5DvRmLicL/H/uz0l4wQCoaMhy08hfEjBLDNloe/2arMEOUpHH7CHrSr1VH3h6mbTNm1VJU8Pb3AsTxIVyNihi3wRItpxClfpIoWdb24JYqCO7YpjDBDfi/HHplLXWCc5z3n5dyFi6KYF1EE0QUzlwlkfFZS4Aj2aGaFGiQ74Taey02CrL24dPytfwUpDKonBmcmterhO41MwxxSei4KzpDv7mnLWXnm09sHIT39apBxwTtJ/+VS0wPkXauin3GVY8uxhxuliEfBrGUQqnLctbsSNP9d1tFpNVlnO9EzduUNHLjDvoM8xS1m1pHqnJJHueRcvYOxMAFElqZDmKLv4+hLV7jc1e5/V2IIfhF1462JL9IkXIbcFqv81nBuj8icwbFc6KG5vysXF3wlAUI/Klf2IHMa7gZskL/TCzwKNUUietXPpNh5DMLgpmg5WE0KQZ3++9+EFPodhW6tF7GPv9CCOWQckSq14TvjQkDs3j2trtLM7mj+8B0DzAQLnMnwrtmXeYdGhBOdpcOuL7zyrbqc3568cJKkv1eJtIg66SRLW9tFSy5eqnTXu6R7Bi8kvRcwfwiu0Qedj9dUaF2oRUiS9ly6b3ugEaFfUqQ1IvvzRczMcwqdMslvTOZAz8bbDwDQk0yZYQnt88+Df05jTf7AIxQvjmxDN/gBtZA=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: TG4g4mxRv5b6a+vHigian8ccZmUrPDxQ5Xwh9NwlbwKwozSJ2dKAemOd+8dXl2M9avY9ZbDi/3KgNlzRBn/rMwLPsZW1xNqoqajWQ7R3ANMzk9EmzuKsqvJFWzNDX7O53dtgfhBJCzw13eLHmd+cNtRrOua/Qd1P3Y5eUwQfPb0VvPICrg9m/SBrYn/xGBaAQkIObylnlLNXfJU1xpeNBHT6sUIDYjbGlpoVweFsqIRxHwlpIh+VjtjOZ8J3ktCBV7VfJh/YhK/bdqlpPmUPCZVQL7TDDO1XUtoN/RlED7aZ/QJvCFatBxCnELJZ9Js1Y3zcn2XZ5z4KVO8Xh6SA5jqjlrkYoE9WOH8nNtb/k/+A5WSq7/lCbhIZ+hGgsQNlg76R5lgu88WwwFPLQpIwl9sYj5njXekrn/1g1yZofwHAXoBOcRhkVWkG8Y6C3aGDTK7GFescPOgEqC/Va81fTgHNiPpSs/OJKn/wo1X4Iwyqgh9YcM9i1PE0feCDROw0yJRXrNaJUtjDP+EYu6GAv+aHj6bGE90xYxzZFe3Wg0602BAOx1sqiTORlTy9ylZvJLp+XsRngWxZekDSJGVW8+0oNpIsALz1H2jFOZumKPzKcZVymOIU8cWEAu0fpWWkmOmM9QKGtpWmsAKe4x1LUY8wT6UnXN+n+3jGY9OsCfM=
  - secure: rlDDoq8QJHv5R41FPsnH6z89LI1huN5/uiiR2mA4wVfNkP2y2WtLeK3mqFaK+7N7pXNnV5INxzeRp7RwL7RHi3C5aElo9vP+5L7eM9T6q6iAZnKeR5WhzpRZ+c+4ikj3Ndf8q/c5I1Cv6vtv05jyFdchY4iut79VC3B5h4Gmb967hmSnfi22ybaUQz6gRMu6X/V5E1fqrafZZmNMVo5fj/M8rWkdv2EEhQBrAUptw5m5eIQICkbbktvVAw6hEtC7VbFEgh/8iJYN/08ouzPO9q53fGAvkC6fMpeDunjOsDs6gqWbofmtakOrHN7xvmVRj4D4+Id+Ws6ofwsPSH+Vx2OI1rXZ5EkUwIUZFHtigNPUx3bvQpCnpImsjELlZuXVKF7z1f68dQ0IJPs0wTvpbE1AritQgKWdxdXmUwaKN5RWzK+1MPhY/aoqg5gm0dVLxGYoa4kLqMAT1Npk/mHeONE526InwRqKeDNthZDj7xnHTX5/st1V9ZcE3fWFrDodEttfBs3EOzP+mm2/rc9Zyz4gEeDS/+X49t7ZXdMK6mGxDmU/pE1ZhWXQYKjvqjEdjShftbVQkQMjWp5RhLQnCeozog+SVxREZifHW/HOXlbDWv0CDGCYVIuW4sMrXC5R9iyO07YXTy+p0mkm9WEmAN1jCcN31YkN8fMTSsxB2ow=
  - secure: nL3VGLozON7ej1VHqtAS88A9V8Tg3AIEFHhmHGtoxDRN2YGOBcaZlaDXVxGNw8OgMzZO2FrsOZC9sjY8BJPZBSlcAXwzhsEdj+upDZPYBHPB31ujRMaiC5GBCKTeFxOGaHiZMVq7ciNSxxmLFz8fGkBf+yG8qdOemEYAXs+Wz1ke1g3LWtCG2o3cJOAJqIL+ZxpapE+WLFwnKFLW8rBcs1+zLknSmcO7yKkqiJ0AEMJ8ajPmnbyWRrz7H/W/AzmQxBj0bJ7RRTAcO2nuzzToZQZywo6iuDotZs0K/C5Spv45byji1tZ9Tv0PussZjPI4kQBCiw4Stg2BeuCWSupK904FeFYpjMyHRYqpVgKAiHchcX6wUKCFd04v24OglSUzs950uZ8ATLrynVmz+w1y+PsBH6x0xVrFPM2//alJHyyZJAPbsZwGI9WH19kFdrbt+3doVlG1DTWYbQaLGyOp6Xf3Z3tJRtHp32Mp/Dx4dgvbC3qs7LZQZVbp5tdno1C58wZWngUUJMhw3rPy+o9INeiURehJGX+QZkisW5b1qVIx5nImVgUf1QtZgPaC6Xn7aYiORVxqrbj2FVL4MLSsNATExAkCrO+dMqHRSJNv2rvgtXR9UAhPpyhTCc+NHbtv7WC1Yy64pTLb3MzrwIDh1J2wTJ+fSzqXgLOEULlxhPI=
  - secure: oresZOcU0ZcddthvK3JfHk6CeFjJZahaczMRE3GLagDijCQEAjC8j9zW6RnO18IabPVQl1Y6g2ZUlXbpXNHtrjYgTqO6mfPi/DBxe3xP7zK6ruEbvxnreSXrxrP6l1KRSDh5Ccyi4M82sln4138/84YZeKOxjtu2YQkrmei4i8QobsYN9T6ctUj2LHYXOtSNU6paXOFn2zeNlLEaEdz4iOD2QeIm0nsxjhltgdylQYS+bMCOuWmOcv5Gps3CUpsZbpYtnHvZ5v9doiGX91IHBKrUbbrj/imMSiagEY3TA15ZtoDLYHm4mkXyByMacyAZ3XtXfULyEvKDxHeSoX2umy3X+xgHkm9mFy2yIe5P/6ayDRazGHmGPP6xz4FGwXH+LTo2nwaJjs9I2//URnbXWf8YPpSFSmzYy4fcttz9/upIX6E3KzedK/hBw0gT16yTJlxCofVdTSqZwzcilGf6gUweDC4oAduXWd9RjIjWac4zGEZiCME9usK38psaz5udpKTVE6h91b3u0kY2oiIdCPj9CFs0RFDuGlIKQ4C7Rrcyf6ywlETWZU4cUi1UXC4YxTmifrf9+VzPANLwXgH/dE3XPfoV5te66gHaTr3jQ5Qu8B3VepE+zBZWMNKXO8XVJIW4Al99pwD6oDty4+Bf/eMOaxeTvqIFJBn5toBj69c=
